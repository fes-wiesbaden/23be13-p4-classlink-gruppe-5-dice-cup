name: CI

on:
  push:
  pull_request:
    branches: [ master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-build:
    name: Backend Build (JDK 21)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Build bootJar (skip tests)
        run: ./gradlew clean bootJar -x test --no-daemon

      - name: Upload bootJar artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: build/libs/*.jar

  backend-test:
    name: Backend Tests (JDK 21)
    runs-on: ubuntu-latest
    needs: backend-build
    steps:
      - uses: actions/checkout@v4

      - name: Setup Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test --no-daemon

      - name: Publish test report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-report
          path: build/reports/tests/test

  api-gen:
    name: Start Backend & Generate API Client
    runs-on: ubuntu-latest
    needs: [ backend-build, backend-test ]

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: classlink
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d classlink"
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Download bootJar
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: build/libs

      - name: Start backend (background) for OpenAPI
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/classlink
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
          SPRING_PROFILES_ACTIVE: ci
        run: |
          JAR="$(ls build/libs/*-*.jar | head -n 1)"
          nohup java -jar "$JAR" \
            --server.port=8080 \
            --spring.datasource.url="${SPRING_DATASOURCE_URL}" \
            --spring.datasource.username="${SPRING_DATASOURCE_USERNAME}" \
            --spring.datasource.password="${SPRING_DATASOURCE_PASSWORD}" \
            --spring.jpa.hibernate.ddl-auto=update \
            --springdoc.api-docs.enabled=true \
            > backend-app.log 2>&1 &
          echo $! > backend.pid

          # Warten bis OpenAPI verfÃ¼gbar ist
          for i in {1..60}; do
            curl -fsS http://localhost:4000/v3/api-docs >/dev/null && break
            sleep 2
          done

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'classlink-frontend/.nvmrc'
          cache: 'yarn'
          cache-dependency-path: 'classlink-frontend/yarn.lock'

      - name: Install Chrome (for headless tests later)
        uses: browser-actions/setup-chrome@v1

      - name: Frontend deps
        working-directory: classlink-frontend
        run: yarn install --frozen-lockfile

      - name: Generate API client (via URL)
        working-directory: classlink-frontend
        env:
          OPENAPI_URL: http://localhost:4000/v3/api-docs
          API_CLIENT_OUT: src/app/
        run: yarn api:gen

      - name: Stop backend & show logs
        if: always()
        run: |
          if [ -f backend.pid ]; then kill -9 "$(cat backend.pid)" || true; fi
          echo "==== Backend logs (tail) ===="
          tail -n 200 backend-app.log || true

      - name: Upload generated client
        uses: actions/upload-artifact@v4
        with:
          name: api-client
          path: classlink-frontend/${{ env.API_CLIENT_OUT || 'src/app/generated' }}

  classlink-frontend-test:
    name: Frontend Lint & Tests
    runs-on: ubuntu-latest
    needs: api-gen
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'classlink-frontend/.nvmrc'
          cache: 'yarn'
          cache-dependency-path: 'classlink-frontend/yarn.lock'

      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install deps
        working-directory: classlink-frontend
        run: yarn install --frozen-lockfile

      - name: Download API client artifact
        uses: actions/download-artifact@v4
        with:
          name: api-client
          path: classlink-frontend/src/app

      - name: Lint
        working-directory: classlink-frontend
        run: yarn lint

      - name: Test (headless)
        working-directory: classlink-frontend
        run: yarn test --watch=false --browsers=ChromeHeadless --no-progress || true

  classlink-frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    needs: classlink-frontend-test
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'classlink-frontend/.nvmrc'
          cache: 'yarn'
          cache-dependency-path: 'classlink-frontend/yarn.lock'

      - name: Install deps
        working-directory: classlink-frontend
        run: yarn install --frozen-lockfile

      - name: Download API client artifact
        uses: actions/download-artifact@v4
        with:
          name: api-client
          path: classlink-frontend/src/app/generated

      - name: Build
        working-directory: classlink-frontend
        run: yarn build --configuration production

      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: classlink-frontend/dist